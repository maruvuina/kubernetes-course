apiVersion: v1
kind: Service
metadata:
  namespace: k8s-program
  name: user-db
spec:
  selector:
    app: user-db
  ports:
    - port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: user-db
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1    
  template:
    metadata:
      labels:
        app: user-db
    spec:
      containers:
        - name: user-db
          image: postgres:14-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: users-database-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: users-database-secret
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: users-database-secret
                  key: dbname
          volumeMounts:
            - name: storage
              mountPath: /data/db/users
            - name: config-initdb
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command: ["psql", "--password", "admin", "-U", "postgres", "-d", "users", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "--password", "admin", "-U", "postgres", "-d", "users", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 1
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: users-db-postgres-pvc
        - name: config-initdb
          configMap:
            name: postgresql-initdb-users-config

---

apiVersion: v1
kind: Service
metadata:
  name: post-db
  namespace: k8s-program
spec:
  selector:
    app: post-db
  ports:
    - port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-db
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: post-db
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1    
  template:
    metadata:
      labels:
        app: post-db
    spec:
      containers:
        - name: post-db
          image: postgres:14-alpine
          ports:
            - containerPort: 5432
          env:  
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: posts-database-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: posts-database-secret
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: posts-database-secret
                  key: dbname
          volumeMounts:
            - name: storage
              mountPath: /data/db/posts
            - name: config-initdb
              mountPath: /docker-entrypoint-initdb.d  
          readinessProbe:
            exec:
              command: ["psql", "--password", "admin", "-U", "postgres", "-d", "posts", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "--password", "admin", "-U", "postgres", "-d", "posts", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 1
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: posts-db-postgres-pvc
        - name: config-initdb
          configMap:
            name: postgresql-initdb-posts-config